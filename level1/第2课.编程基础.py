"""
第2课 编程基础

2.1 学习要点
(1) print()语句。
(2)双引号和单引号。
(3)字符串及数值类型转换。
(4) input()语句。
(5)变量的命名和使用、保留字。

2.2 对标内容

掌握变量的基本概念,会使用变量,并且掌握变量名的命名和保留字等基本语法;
理解字符串、数值型变量,会对变量类型进行转换。

2.3 情景导入

盖房子需要先打地基,学习编程同样的需要先从“地基”入手。
在上一课中,我们对于工具有了基本的了解,这就相当于我们已经认识了写字使用的笔,
但是想要写出一手好字,还需要把握笔、坐姿、笔顺、笔画等基本功练扎实了。

2.4 print()函数

2.4.1 知识点详解

作用:打印输出,即在屏幕上显示相关信息。

用法:如果后面显示的是字符串,那么需要加引号;
如果显示的是可计算的数值类的数据,可以不用加引号。

语法:

(1)输出字符串:需要在字符串前后加上引号(单引号、双引号均可,但是要成对使用),
如下所示(第二行为运行结果)。

>>> print ("我是一名学生!")
我是一名学生!

(2)输出有数值的数字:输出数字不需要加引号,
但是print()函数会对输出的数字进行计算,如下所示(第二行为运行结果)。

>>> print(4+8)
12

(3)输出变量:如果字符串没有加引号,print()函数会把它当作变量来处理,
如果该变量在print()函数之前已经进行过赋值,则会输出该变量的值,
如下所示(第三行为运行结果)。

>>> coding = "Python 3" #给变量 coding 赋值
>>> print (coding) #输 coding
Python 3

(4) 输出多个内容: print()函数可以同时输出多个对象,对象之间用逗号隔开,
如下所示。

>>> a = 6
>>> b = "China"
>>> print(a,b)

6 China

(5)换行: print()函数默认是在本命令结束后进行换行,
如果不需要换行,则需要将默认的参数end =\n'(换行符)改成其他字符,
则该命令结束后将自动输出该字符,如下页所示。

print("I am ", end ="--")
print("student")
I am --student #运行结果

2.4.2 易错点

(1)对于print()函数中的数字,一定要注意观察是否加了引号,
如果加了引号,则会当作字符串而不是数字来进行处理。

(2) print()函数可以跨行输出,但是需要使用三引号,如下所示。

>>> print('''*
>>> **
>>> ***
>>> ****''')
*
**
***
****

(3) print()函数中的引号(单引号、双引号、三引号)均必须是英文状态下的半角引号。

(4)转义符:在print()函数中,有时候需要输出英文的单引号或者双引号,
由于其有着特殊的含义,所以需要配合Python中的转义符、来进行转义(转义符的使用详见字符串相关内容),
如下所示。

>>> print ("I\'m XianJin.") #利用转义符输出'
I'm XianJin. # 运行结果

2.4.3 模拟考题

考题1 单选题

在Python中,下列哪个函数用于输出内容到终端?
A. print()
B. output()
C. import()
D. echo()


答案: A
解析:输出内容到终端其实就是显示,所以选A。

考题 2单选题

print(6+8/2)输出的结果是()

A. 7
B. 10.0
C. 10
D. 6+8/2


答案: B

解析: 8/2的结果虽然是整数4,但是在Python中,除法默认会自动保留
一位小数(在能除尽的情况下),所以8/2的结果是4.0, 6+4.0等于10.0,因
而答案是B。

考题3 判断题

print('I\'m ok.')因为有3个单引号,所以程序是错误的。()

答案:错误
解析:虽然这里使用了3个单引号,但是第二个单引号是在转义符\后面,
所以是直接输出单引号,该命令输出的结果是"I'm ok.”


2.5 变量及变量命名

2.5.1 知识点详解

1,关于变量

Python中的变量并不直接存储值,而是对存储了值的内存地址的引用。
这是因为Python采用基于值的内存管理模式。我们可以这样理解:
内存就像是一个个的盒子;值就像是盒子里的物品;
而变量则是贴在盒子上的一个个标签。

正因为如此, Python中,变量不需要提前声明,但是一定要指向(或者关联)某一个对象
(在这里我们可以把对象理解为放到盒子里的值),变量在指向对象的时候就自动创建了。

2,变量的命名规则

(1)变量名由大小写字母、数字、下划线,以及汉字等字符串组合,但是,一般情况下,我们并不鼓励使用汉字作为变量名。
(2)变量名必须以字母或下画线开头(不能以数字开头),但以下画线开头有特殊的含义,我们也不鼓励开头使用下划线。
(3)变量名中不能有空格或者标点符号(如逗号、顿号、分号、冒号等)。
(4)不能将保留字作为变量名使用。
(5) Python变量名是大小写敏感的,也就是说,同样的字母,大写和小写代表不同的变量。

3,保留字

保留字也称关键字,是指在语言本身的编译器中已经定义过的单词,具有特定含义和用途,
用户不能再将这些单词作为变量名或函数名、类名使用。

Python的保留字可以通过下面的命令查看。

>>> import keyword
>>> keyword.kwlist

Python 语言的35个保留字如下(一级要求记住标*的18个,但考试时也可能出现其余的17个):

False*、None*、True*、and*、as*、assert、async, await, break、 class,
continue, def*、del*elif*、else*、except、finally、 for*、from*、
globalif*、import*、in*、is*、lambda, nonlocal、not*、or*、pass,raise,
return、 try, while*、with, yield。

若将保留字作为变量名并赋值,将会得到语法错误提示,如下所示。

>>> if = "Python"
SyntaxError: invalid syntax

2.5.2 易错点

(1)虽然不鼓励用汉字作为变量名,但是不能说变量名用汉字就是错误的。
(2) Python允许同时为多个变量赋值,该种赋值有两种情况:
第一种,多个变量指向同一个对象;
第二种,多个变量指向不同对象,在该种情况下要注意变量和对象的数量要一致,如下所示。

a = b = c = 1 #第一种:多个变量指向同一个对象
a,b,c,d = 1,2,3, 'Python' #第二种:多个对象指向不同对象

(3)命令函数不一定是保留字符,比如求和函数sum()中的sum就不是保留字符, sum是可以当作变量名使用的。

2.5.3 模拟考题

考题1 判断题

as,is, class、true 都不可以作为变量名。

答案:错误
解析: as,is,class确实是Python的保留字,但是true不是,虽然它和True 长得很像,
但是,根据Python的变量规则:大小写是敏感的,所以True和true不是一回事,所以true是可以当作变量名的。


考题2 单选题

以下哪个变量命名不符合Python规范?
A. 语言 ='Python'
B. _language='Python'
C. language='Python'
D. .language='Python'

答案: D
解析:变量名称中除了下划线之外,其余的标点符号都不能有, 所以D是错误的;
A选项使用了中文,看似也是错误的,但是根据Python的变量规则,可以使用中文命名变量,
只是为了尽可能靠近Python的编程规范,不鼓励使用中文来命名变量而已,不能说用中文命名变量就错了。考题3单选题


下列哪个不是Python的保留字? ()
A. if
B. or
C. turtle
D. for

答案: C

解析:本题目中的C极具迷惑性,因为一级考试中要求同学们掌握turtle库,所以好多同学误认为turtle是保留字,
但是,库文件名和保留字不能等同,库文件名是可以作为变量使用的。所以本题正确答案是C。

考题4 单选题

运行下列语句后显示的结果是什么?()

b = 2 * a / 4
a = 1
print (a,b)

A.1,0.5
B. 1,0
C.报错
D.0, 1

答案: C
解析:这道题,看似a和b都有赋值,但是我们仔细分析,发现b在赋值时引人了变量a,
但是这时候a还没有进行变量与对象的匹配(也可以理解为a还没有赋值),所以这时候a变量是在内存中不存在的,
必然会报错。因而答案为C。


2.6 内置对象类型、类型转换

2.6.1 知识点详解

Python 常见的内置对象类型有如下6种:数字、字符串、列表、元组、字典、集合。
在一级考试中,我们只要求掌握数字(整型和浮点型)与字符串类型的互相转换。

1.把其他数据类型转换为数字类型(含整型和浮点型)

首先,其他数据类型必须是数字组成的字符串,非数字字符组成的字符串是不能转换为数字;
其次,转换的方式为如下3种。

int():作用是将其他对象类型转换为整数,如下所示。

>>> int('123') #将字符串转换为整数
123

>>> int(12.3) #将浮点数转换为整数
12

float():作用是将其他对象类型转换为浮点数,如果原对象类型为整型,则保留1位小数;
如果原对象本身含有小数点,则按照原对象小数点后面的位数进行保留,如下所示。

>>> float('123.24') #将字符串转换为浮点数
123.24

>>> float(12) #将整数转换换为浮点数
12.0

eval():作用是返回传入字符串的表达式的结果,由于返回的是表达式的值,
所以eval()的返回值是数字类型的对象,如下所示。

>>> eval('4+6') #将字符串4+6表达式的值返回
10.0

>>> eval("123.4") #将字符串123.4的值返回
123.4

2.将其他数据类型转换为字符串类型

该种转换,只能使用str()函数, str()函数的功能是将其他数据类型转换为字符串类型,如下页所示。

>>> str(10)
'10'

3. type()函数

该函数的主要作用是查看对象的数据类型,返回的值常见的有<type 'int'>、<type 'str'>、 <type 'list'>、
<type 'float'> 等和对象类型相匹配的类型名称,如下所示。

>>> type("123")
<type 'str'>

4·字符串类型的基本运算

加法运算:字符串和字符串可以进行加法运算,相当于把两个字符串连接在一起。
乘法运算:字符串可以和整型数据类型进行乘法运算,相当于把该字符串重复显示多少次。
但是要注意,字符串必须在整型数据之前,如下所示。

>>> print("电子学会"*3)
电子学会电子学会电子学会


5·数字类型的运算
这种类型的运算比较多也比较复杂,所以我们将把这一部分内容放到运算符中来进行详解。

2.6.2 易错点

(1)字符串的加法运算必须在字符串类型之间进行,不能和其他类型进行加法运算,比如print("123"+3)是错误的。
(2) str()函数在进行转换前要对对象进行计算,如下所示。

>>> a = 4+8
>>> print(str(a))
12

(3) eval()函数可以计算表达式的结果,不可计算的表达式是无法计算的,比如含有字母的字符串,
还有我们将在二级考核的列表等,所以在使用时必须要注意表达式是否可以转换为可计算的表达式。
例如: eval('1+2+4.5')是可以计算的; 但是a = "1+2"时, eval('a+4.5')可以计算,
eval(a+4.5)和(a+"4.5")就不可以计算。

2.6.3 模拟考题

考题1 单选题

a = 5
print('a+4')

以上两段代码的运行结果是?
A. 9
B. 'a+4'
C.无结果,出错
D. a+4


答案: D
解析:根据题意可知a的值是5,但是print('a+4')是一个字符串,
并不是一个运算表达式,所以输出的结果是a+4。

考题2单选题

以下哪种输入结果不可能得到以下反馈 :重要的事情说3遍:安全第一!安全第一!安全第一!
A. print("重要事情说3遍: "+"安全第一! "*3)
B. print("重要事情说3遍: "+"安全第一! “+”安全第一! "*2)
C. print("重要事情说3遍: "+"安全第一! "+"安全第一! "+"安全第一!
D. print("重要事情说3遍: "+"安全第一! "/3)


答案: D
解析:这是一个典型的字符串运算的题目,根据字符串运算的规则,A、B、C均可让“安全第一”重复3次,
但是字符串不可以进行除法运算,所以D是错误的。

2.7 input()函数

2.7.1 知识点详解

input()函数是Python用来进行人机交互的, Python 3中, input()函数接受一个标准输入数据,返回为字符串类型。
input()函数里面的参数是提示信息,会在进行人机交互时输出在屏幕上,所以input()函数里面的参数只能使用字符串,
如: input("请输入您的姓名:")

如果没有提示信息，屏幕上不会出现提示信息。

2.7.2 易错点

在进行人机交互的时候,无论用户输入的是否是字符串,input()函数返回的值的类型都是字符串类型,
所以如果要对输入的数字进行运算,必须要对返回的值进行数据类型的转换,如下所示。

>>> a = input("请输入一个整数")
>>> b = int(a) + 12
>>> print(b)

如果需要将 input()返回的值转换为数字类型,可以使用int()、float()或者eval()函数。

2.7.3 模拟考题


考题1编程题

已知一头奶牛每天可以产20千克牛奶。N(N为变量)头奶牛7天可以产多少千克的牛奶?要求:

(1)程序开始运行后,会有提示字符串: “请输入奶牛的头数:”,
完成奶牛头数的输入(可以直接赋值提示字符串到程序中,提示字符串包括冒号,但不包括双引号) ;

(2)程序会根据输入的奶牛头数计算出总共产出的牛奶的重量,并将结果进行修饰然后输出。
示例:如果输入奶牛的头数为10,则输出“10头奶牛7天可以产1400千克的牛奶”

评分标准:

(1)有输入语句并且有清楚的提示字符串(2分);
(2)有输出语句并且按照样例输出(2分);
(3)有类型转换语句(2分);
(4)有计算语句(2分);
(5)程序符合题目要求(2分)

参考程序 1

n = input("请输入奶牛的头数: ")
n = eval(n)
milk = n * 20 * 7
print (n, "头奶牛7天可以产", milk,"千克的牛奶")

参考程序 2
n = input("请输入奶牛的头数: ")
n = int(n)
milk = n * 20 * 7
print (n,"头奶牛7天可以产",milk,"千克的牛奶")

解析:这是一道编程题,题目本身不难,但是由于要进行数学四则运算,
所以一定要将input()函数返回的值进行类型转换,否则程序会报错。
从参考程序可以看到,无论是用哪一种方法,类型转换都必不可少。

考题2 单选题程序:

a = input("请输入一个数字")
b = a * 3

运行后,如果用户输入的数字是44,那么这时候b是多少?
A. 44
B. 444444
C. 132
D.程序会报错

答案: B
解析:用户输入的是44,但是由于程序中并没有对44进行类型转换,
所以44的类型仍然是字符串类型,对字符串类型数据进行乘法运算,代表将该字符串重复输出该次数,
所以b的结果是44重复3次,即444444,选B。
"""
