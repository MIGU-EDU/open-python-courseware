"""
15.9 顺序查找

15.9.1 知识点详解

1.顺序查找的概念

生活中,顺序查找的例子有很多,比如要从相册中从头开始翻阅查找一张已知的照片。查找算法是程序中经常用到的算法。
假定要从n个元素中查找值x是否存在,最原始的方法是从头到尾依次查找,这种查找的方法就叫顺序查找。

查找是一种查询数据的技术,其目标是能以比较少的步骤或在较短时间内找到所需的对象。
程序将按照查找的结果(找到或未找到)来决定接着应执行的步骤。我们主要掌握顺序查找与对分查找算法。

顺序查找的基本思想是从第一个数据开始,按顺序逐个将数据与给定的数据(查找键)进行比较,若某个数据和查找键相等,
则查找成功,输出所查数据的位置;反之,输出未找到。

2.顺序查找的处理过程

假定列表a中有n个数据,查找键已经存储在变量key中。

其处理过程是:从列表a的第1个元素a[0]开始,依次判断各元素的值是否与查找键key相等,
若某个元素a[i]的值等于key,则找到了指定的数据,结束处理;若找遍了所有的n个元素,
无任何元素的值等于key,则结束处理,输出未找到信息。

3.顺序查找的程序实现

在列表中查找元素26.

1st = [32, 17, 56, 25, 26, 89, 65, 12]
key= 26 #要查找的元素

b = -1 #要查找元素的索引
m = len(1st) #列表长度

for i in range (0, m):
    if lst[i] == key:
        b = i
        break

if b = -1: #-1代表元素未查找到
    print ("要查找的元素[" + str(key) + "]不在列表1st 中。")
else:
    print ("要查找的元素[" + str (key) + "]的索引是: "+ str (b))

思考题

(1)为找自己第一次上幼儿园时的照片,小张同学依次翻开自己的多本相逐张查找。这种查找方法为()。

A.无序查找 B.顺序查找 C.对分查找 D.随机查找

(2)在23、41、54、26、84、52、65、21中查找数字52,采用从后往前的顺序查找,需要查找的次数是()。

A.2次B.3次C.7次D.1次


15.9.2 易错点

(1)顺序查找算法与枚举算法的相似处与不同处。
(2)顺序查找程序的实现。


15.9.3模拟考题

考题1单选题

对于n个元素,利用顺序查找算法,最坏的情况是查找()次才结束。
A. n B. n/2  C. n²  D. ㏒₂n+1

答案: A

解析:根据顺序查找的定义,最坏的情况要查找n次,也就是查找到最后一个元素才找到。



"""